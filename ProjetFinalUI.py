#! /usr/bin/env python3
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 7.6
#  in conjunction with Tcl version 8.6
#    May 16, 2023 04:10:13 PM EDT  platform: Windows NT

import sys
import tkinter as tk
import tkinter.ttk as ttk
from tkinter.constants import *
import os.path

import classes



_script = sys.argv[0]
_location = os.path.dirname(_script)

#import unknown_support

_bgcolor = '#d9d9d9'  # X11 color: 'gray85'
_fgcolor = '#000000'  # X11 color: 'black'
_compcolor = 'gray40' # X11 color: #666666
_ana1color = '#c3c3c3' # Closest X11 color: 'gray76'
_ana2color = 'beige' # X11 color: #f5f5dc
_tabfg1 = 'black'
_tabfg2 = 'black'
_tabbg1 = 'grey75'
_tabbg2 = 'grey89'
_bgmode = 'light'

_style_code_ran = 0
def _style_code():
    global _style_code_ran
    if _style_code_ran:
       return
    style = ttk.Style()
    if sys.platform == "win32":
       style.theme_use('winnative')
    style.configure('.',background=_bgcolor)
    style.configure('.',foreground=_fgcolor)
    style.configure('.',font='TkDefaultFont')
    style.map('.',background =
       [('selected', _compcolor), ('active',_ana2color)])
    if _bgmode == 'dark':
       style.map('.',foreground =
         [('selected', 'white'), ('active','white')])
    else:
       style.map('.',foreground =
         [('selected', 'black'), ('active','black')])
    style.map('TNotebook.Tab', background =
            [('selected', _bgcolor), ('active', _tabbg1),
            ('!active', _ana2color)], foreground =
            [('selected', _fgcolor), ('active', _tabfg1), ('!active',  _tabfg2)])
    style.configure('Vertical.TScrollbar',  background=_bgcolor,
        arrowcolor= _fgcolor)
    style.configure('Horizontal.TScrollbar',  background=_bgcolor,
        arrowcolor= _fgcolor)
    style.configure('Treeview',  font="TkDefaultFont")
    _style_code_ran = 1

class ProjetFinalUI:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''

        top.geometry("600x450+660+210")
        top.minsize(120, 1)
        top.maxsize(3844, 1061)
        top.resizable(1,  1)
        top.title("Toplevel 0")
        top.configure(background="#d9d9d9")

        self.top = top
        self.combobox = tk.StringVar()

        _style_code()
        self.TNotebook1 = ttk.Notebook(self.top)
        self.TNotebook1.place(relx=0.0, rely=0.0, relheight=1.013
                , relwidth=1.007)
        self.TNotebook1.configure(takefocus="")
        self.TNotebook1_t1 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t1, padding=3)
        self.TNotebook1.tab(0, text='''Garage''', compound="left"
                ,underline='''-1''', )
        self.TNotebook1_t1.configure(background="#9742ff")
        self.TNotebook1_t1.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t1.configure(highlightcolor="black")
        self.TNotebook1_t2 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t2, padding=3)
        self.TNotebook1.tab(1, text='''Voiture''', compound="left"
                ,underline='''-1''', )
        self.TNotebook1_t2.configure(background="#ffff80")
        self.TNotebook1_t2.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t2.configure(highlightcolor="black")
        self.TNotebook1_t3 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t3, padding=3)
        self.TNotebook1.tab(2, text='''Réparation''', compound="left"
                ,underline='''-1''', )
        self.TNotebook1_t3.configure(background="#ff77ff")
        self.TNotebook1_t3.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t3.configure(highlightcolor="black")
        self.TNotebook1_t4 = tk.Frame(self.TNotebook1)
        self.TNotebook1.add(self.TNotebook1_t4, padding=3)
        self.TNotebook1.tab(3, text='''Consultations''', compound="left"
                ,underline='''-1''', )
        self.TNotebook1_t4.configure(background="#80ffff")
        self.TNotebook1_t4.configure(highlightbackground="#d9d9d9")
        self.TNotebook1_t4.configure(highlightcolor="black")
        self.Labelframe1 = tk.LabelFrame(self.TNotebook1_t1)
        self.Labelframe1.place(relx=0.033, rely=0.07, relheight=0.43
                , relwidth=0.933)
        self.Labelframe1.configure(relief='groove')
        self.Labelframe1.configure(foreground="#000000")
        self.Labelframe1.configure(text='''infos garage''')
        self.Labelframe1.configure(background="#fd4456")
        self.Label1 = tk.Label(self.Labelframe1)
        self.Label1.place(relx=0.018, rely=0.162, height=31, width=64
                , bordermode='ignore')
        self.Label1.configure(anchor='w')
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(compound='left')
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''nom:''')
        self.Label2 = tk.Label(self.Labelframe1)
        self.Label2.place(relx=0.018, rely=0.378, height=31, width=64
                , bordermode='ignore')
        self.Label2.configure(anchor='w')
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(compound='left')
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''Adresse:''')
        self.Label3 = tk.Label(self.Labelframe1)
        self.Label3.place(relx=0.018, rely=0.595, height=41, width=64
                , bordermode='ignore')
        self.Label3.configure(anchor='w')
        self.Label3.configure(background="#d9d9d9")
        self.Label3.configure(compound='left')
        self.Label3.configure(disabledforeground="#a3a3a3")
        self.Label3.configure(foreground="#000000")
        self.Label3.configure(text='''téléphone:''')
        self.BtnCréerGarage = tk.Button(self.Labelframe1)
        self.BtnCréerGarage.place(relx=0.321, rely=0.865, height=24, width=157
                                  , bordermode='ignore')
        self.BtnCréerGarage.configure(activebackground="beige")
        self.BtnCréerGarage.configure(activeforeground="black")
        self.BtnCréerGarage.configure(background="#d9d9d9")
        self.BtnCréerGarage.configure(compound='left')
        self.BtnCréerGarage.configure(disabledforeground="#a3a3a3")
        self.BtnCréerGarage.configure(foreground="#000000")
        self.BtnCréerGarage.configure(highlightbackground="#d9d9d9")
        self.BtnCréerGarage.configure(highlightcolor="black")
        self.BtnCréerGarage.configure(pady="0")
        self.BtnCréerGarage.configure(text='''créer garage''')
        self.EntryGarageNom = tk.Entry(self.Labelframe1)
        self.EntryGarageNom.place(relx=0.161, rely=0.162, height=30, relwidth=0.471
                                  , bordermode='ignore')
        self.EntryGarageNom.configure(background="white")
        self.EntryGarageNom.configure(disabledforeground="#a3a3a3")
        self.EntryGarageNom.configure(font="TkFixedFont")
        self.EntryGarageNom.configure(foreground="#000000")
        self.EntryGarageNom.configure(insertbackground="black")
        self.EntryGarageAddresse = tk.Entry(self.Labelframe1)
        self.EntryGarageAddresse.place(relx=0.161, rely=0.378, height=30, relwidth=0.614
                                       , bordermode='ignore')
        self.EntryGarageAddresse.configure(background="white")
        self.EntryGarageAddresse.configure(disabledforeground="#a3a3a3")
        self.EntryGarageAddresse.configure(font="TkFixedFont")
        self.EntryGarageAddresse.configure(foreground="#000000")
        self.EntryGarageAddresse.configure(insertbackground="black")
        self.EntryGarageTelephone = tk.Entry(self.Labelframe1)
        self.EntryGarageTelephone.place(relx=0.161, rely=0.595, height=30, relwidth=0.382
                                        , bordermode='ignore')
        self.EntryGarageTelephone.configure(background="white")
        self.EntryGarageTelephone.configure(disabledforeground="#a3a3a3")
        self.EntryGarageTelephone.configure(font="TkFixedFont")
        self.EntryGarageTelephone.configure(foreground="#000000")
        self.EntryGarageTelephone.configure(insertbackground="black")
        self.Label4 = tk.Label(self.TNotebook1_t1)
        self.Label4.place(relx=0.05, rely=0.581, height=41, width=104)
        self.Label4.configure(anchor='w')
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(compound='left')
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''Fichier:''')
        self.BtnDesserialiser = tk.Button(self.TNotebook1_t1)
        self.BtnDesserialiser.place(relx=0.05, rely=0.837, height=44, width=101)
        self.BtnDesserialiser.configure(activebackground="beige")
        self.BtnDesserialiser.configure(activeforeground="black")
        self.BtnDesserialiser.configure(background="#d9d9d9")
        self.BtnDesserialiser.configure(compound='left')
        self.BtnDesserialiser.configure(disabledforeground="#a3a3a3")
        self.BtnDesserialiser.configure(foreground="#000000")
        self.BtnDesserialiser.configure(highlightbackground="#d9d9d9")
        self.BtnDesserialiser.configure(highlightcolor="black")
        self.BtnDesserialiser.configure(pady="0")
        self.BtnDesserialiser.configure(text='''Déserialiser''')
        self.BtnSerialiser = tk.Button(self.TNotebook1_t1)
        self.BtnSerialiser.place(relx=0.65, rely=0.837, height=44, width=117)
        self.BtnSerialiser.configure(activebackground="beige")
        self.BtnSerialiser.configure(activeforeground="black")
        self.BtnSerialiser.configure(background="#d9d9d9")
        self.BtnSerialiser.configure(compound='left')
        self.BtnSerialiser.configure(disabledforeground="#a3a3a3")
        self.BtnSerialiser.configure(foreground="#000000")
        self.BtnSerialiser.configure(highlightbackground="#d9d9d9")
        self.BtnSerialiser.configure(highlightcolor="black")
        self.BtnSerialiser.configure(pady="0")
        self.BtnSerialiser.configure(text='''Sérialiser''')
        self.EntryFichier = tk.Entry(self.TNotebook1_t1)
        self.EntryFichier.place(relx=0.25, rely=0.581, height=40, relwidth=0.457)
        self.EntryFichier.configure(background="white")
        self.EntryFichier.configure(disabledforeground="#a3a3a3")
        self.EntryFichier.configure(font="TkFixedFont")
        self.EntryFichier.configure(foreground="#000000")
        self.EntryFichier.configure(insertbackground="black")
        self.Labelframe2 = tk.LabelFrame(self.TNotebook1_t2)
        self.Labelframe2.place(relx=0.0, rely=0.023, relheight=0.36
                , relwidth=0.983)
        self.Labelframe2.configure(relief='groove')
        self.Labelframe2.configure(foreground="#000000")
        self.Labelframe2.configure(text='''infos voiture''')
        self.Labelframe2.configure(background="#ff8040")
        self.Label5 = tk.Label(self.Labelframe2)
        self.Label5.place(relx=0.017, rely=0.116, height=37, width=94
                , bordermode='ignore')
        self.Label5.configure(anchor='w')
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(compound='left')
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''Num. Plaque:''')
        self.Label6 = tk.Label(self.Labelframe2)
        self.Label6.place(relx=0.017, rely=0.387, height=37, width=94
                , bordermode='ignore')
        self.Label6.configure(anchor='w')
        self.Label6.configure(background="#d9d9d9")
        self.Label6.configure(compound='left')
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(text='''Marque:''')
        self.Label7 = tk.Label(self.Labelframe2)
        self.Label7.place(relx=0.017, rely=0.71, height=37, width=94
                , bordermode='ignore')
        self.Label7.configure(anchor='w')
        self.Label7.configure(background="#d9d9d9")
        self.Label7.configure(compound='left')
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(text='''couleur:''')
        self.EntryVoitureNumPlaque = tk.Entry(self.Labelframe2)
        self.EntryVoitureNumPlaque.place(relx=0.203, rely=0.129, height=30, relwidth=0.261
                                         , bordermode='ignore')
        self.EntryVoitureNumPlaque.configure(background="white")
        self.EntryVoitureNumPlaque.configure(disabledforeground="#a3a3a3")
        self.EntryVoitureNumPlaque.configure(font="TkFixedFont")
        self.EntryVoitureNumPlaque.configure(foreground="#000000")
        self.EntryVoitureNumPlaque.configure(insertbackground="black")
        self.EntryVoitureMarque = tk.Entry(self.Labelframe2)
        self.EntryVoitureMarque.place(relx=0.203, rely=0.387, height=30, relwidth=0.312
                                      , bordermode='ignore')
        self.EntryVoitureMarque.configure(background="white")
        self.EntryVoitureMarque.configure(disabledforeground="#a3a3a3")
        self.EntryVoitureMarque.configure(font="TkFixedFont")
        self.EntryVoitureMarque.configure(foreground="#000000")
        self.EntryVoitureMarque.configure(insertbackground="black")
        self.EntryVoitureCouleur = tk.Entry(self.Labelframe2)
        self.EntryVoitureCouleur.place(relx=0.203, rely=0.71, height=30, relwidth=0.244
                                       , bordermode='ignore')
        self.EntryVoitureCouleur.configure(background="white")
        self.EntryVoitureCouleur.configure(disabledforeground="#a3a3a3")
        self.EntryVoitureCouleur.configure(font="TkFixedFont")
        self.EntryVoitureCouleur.configure(foreground="#000000")
        self.EntryVoitureCouleur.configure(insertbackground="black")
        self.Label8 = tk.Label(self.Labelframe2)
        self.Label8.place(relx=0.559, rely=0.387, height=41, width=74
                , bordermode='ignore')
        self.Label8.configure(anchor='w')
        self.Label8.configure(background="#d9d9d9")
        self.Label8.configure(compound='left')
        self.Label8.configure(disabledforeground="#a3a3a3")
        self.Label8.configure(foreground="#000000")
        self.Label8.configure(text='''Modele:''')
        self.Label9 = tk.Label(self.Labelframe2)
        self.Label9.place(relx=0.559, rely=0.71, height=31, width=74
                , bordermode='ignore')
        self.Label9.configure(anchor='w')
        self.Label9.configure(background="#d9d9d9")
        self.Label9.configure(compound='left')
        self.Label9.configure(disabledforeground="#a3a3a3")
        self.Label9.configure(foreground="#000000")
        self.Label9.configure(text='''Anné:''')
        self.EntryVoitureModel = tk.Entry(self.Labelframe2)
        self.EntryVoitureModel.place(relx=0.729, rely=0.387, height=40, relwidth=0.244
                                     , bordermode='ignore')
        self.EntryVoitureModel.configure(background="white")
        self.EntryVoitureModel.configure(disabledforeground="#a3a3a3")
        self.EntryVoitureModel.configure(font="TkFixedFont")
        self.EntryVoitureModel.configure(foreground="#000000")
        self.EntryVoitureModel.configure(insertbackground="black")
        self.EntryVoitureAnne = tk.Entry(self.Labelframe2)
        self.EntryVoitureAnne.place(relx=0.729, rely=0.71, height=30, relwidth=0.193
                                    , bordermode='ignore')
        self.EntryVoitureAnne.configure(background="white")
        self.EntryVoitureAnne.configure(disabledforeground="#a3a3a3")
        self.EntryVoitureAnne.configure(font="TkFixedFont")
        self.EntryVoitureAnne.configure(foreground="#000000")
        self.EntryVoitureAnne.configure(insertbackground="black")
        self.Labelframe3 = tk.LabelFrame(self.TNotebook1_t2)
        self.Labelframe3.place(relx=0.0, rely=0.395, relheight=0.5
                , relwidth=0.983)
        self.Labelframe3.configure(relief='groove')
        self.Labelframe3.configure(foreground="#000000")
        self.Labelframe3.configure(text='''infos propriétaire''')
        self.Labelframe3.configure(background="#ff8040")
        self.Label10 = tk.Label(self.Labelframe3)
        self.Label10.place(relx=0.017, rely=0.14, height=31, width=74
                , bordermode='ignore')
        self.Label10.configure(anchor='w')
        self.Label10.configure(background="#d9d9d9")
        self.Label10.configure(compound='left')
        self.Label10.configure(disabledforeground="#a3a3a3")
        self.Label10.configure(foreground="#000000")
        self.Label10.configure(text='''Nom:''')
        self.Label11 = tk.Label(self.Labelframe3)
        self.Label11.place(relx=0.017, rely=0.326, height=31, width=74
                , bordermode='ignore')
        self.Label11.configure(anchor='w')
        self.Label11.configure(background="#d9d9d9")
        self.Label11.configure(compound='left')
        self.Label11.configure(disabledforeground="#a3a3a3")
        self.Label11.configure(foreground="#000000")
        self.Label11.configure(text='''Prénom:''')
        self.Label12 = tk.Label(self.Labelframe3)
        self.Label12.place(relx=0.017, rely=0.512, height=31, width=74
                , bordermode='ignore')
        self.Label12.configure(anchor='w')
        self.Label12.configure(background="#d9d9d9")
        self.Label12.configure(compound='left')
        self.Label12.configure(disabledforeground="#a3a3a3")
        self.Label12.configure(foreground="#000000")
        self.Label12.configure(text='''courriel:''')
        self.Label13 = tk.Label(self.Labelframe3)
        self.Label13.place(relx=0.017, rely=0.744, height=31, width=74
                , bordermode='ignore')
        self.Label13.configure(anchor='w')
        self.Label13.configure(background="#d9d9d9")
        self.Label13.configure(compound='left')
        self.Label13.configure(disabledforeground="#a3a3a3")
        self.Label13.configure(foreground="#000000")
        self.Label13.configure(text='''Téléphone:''')
        self.EntryProprietaireNom = tk.Entry(self.Labelframe3)
        self.EntryProprietaireNom.place(relx=0.153, rely=0.14, height=30, relwidth=0.295
                                        , bordermode='ignore')
        self.EntryProprietaireNom.configure(background="white")
        self.EntryProprietaireNom.configure(disabledforeground="#a3a3a3")
        self.EntryProprietaireNom.configure(font="TkFixedFont")
        self.EntryProprietaireNom.configure(foreground="#000000")
        self.EntryProprietaireNom.configure(insertbackground="black")
        self.EntryProprietairePrenom = tk.Entry(self.Labelframe3)
        self.EntryProprietairePrenom.place(relx=0.153, rely=0.326, height=30, relwidth=0.414
                                           , bordermode='ignore')
        self.EntryProprietairePrenom.configure(background="white")
        self.EntryProprietairePrenom.configure(disabledforeground="#a3a3a3")
        self.EntryProprietairePrenom.configure(font="TkFixedFont")
        self.EntryProprietairePrenom.configure(foreground="#000000")
        self.EntryProprietairePrenom.configure(insertbackground="black")
        self.EntryProprietaireCourriel = tk.Entry(self.Labelframe3)
        self.EntryProprietaireCourriel.place(relx=0.153, rely=0.512, height=30, relwidth=0.498
                                             , bordermode='ignore')
        self.EntryProprietaireCourriel.configure(background="white")
        self.EntryProprietaireCourriel.configure(disabledforeground="#a3a3a3")
        self.EntryProprietaireCourriel.configure(font="TkFixedFont")
        self.EntryProprietaireCourriel.configure(foreground="#000000")
        self.EntryProprietaireCourriel.configure(insertbackground="black")
        self.EntryProprietaireTelephone = tk.Entry(self.Labelframe3)
        self.EntryProprietaireTelephone.place(relx=0.153, rely=0.744, height=30, relwidth=0.397
                                              , bordermode='ignore')
        self.EntryProprietaireTelephone.configure(background="white")
        self.EntryProprietaireTelephone.configure(disabledforeground="#a3a3a3")
        self.EntryProprietaireTelephone.configure(font="TkFixedFont")
        self.EntryProprietaireTelephone.configure(foreground="#000000")
        self.EntryProprietaireTelephone.configure(insertbackground="black")
        self.BtnAjouterVoiture = tk.Button(self.TNotebook1_t2)
        self.BtnAjouterVoiture.place(relx=0.1, rely=0.907, height=34, width=97)
        self.BtnAjouterVoiture.configure(activebackground="beige")
        self.BtnAjouterVoiture.configure(activeforeground="black")
        self.BtnAjouterVoiture.configure(background="#d9d9d9")
        self.BtnAjouterVoiture.configure(compound='left')
        self.BtnAjouterVoiture.configure(disabledforeground="#a3a3a3")
        self.BtnAjouterVoiture.configure(foreground="#000000")
        self.BtnAjouterVoiture.configure(highlightbackground="#d9d9d9")
        self.BtnAjouterVoiture.configure(highlightcolor="black")
        self.BtnAjouterVoiture.configure(pady="0")
        self.BtnAjouterVoiture.configure(text='''ajouter''')
        self.BtnRechercherVoiture = tk.Button(self.TNotebook1_t2)
        self.BtnRechercherVoiture.place(relx=0.517, rely=0.907, height=34, width=137)
        self.BtnRechercherVoiture.configure(activebackground="beige")
        self.BtnRechercherVoiture.configure(activeforeground="black")
        self.BtnRechercherVoiture.configure(background="#d9d9d9")
        self.BtnRechercherVoiture.configure(compound='left')
        self.BtnRechercherVoiture.configure(disabledforeground="#a3a3a3")
        self.BtnRechercherVoiture.configure(foreground="#000000")
        self.BtnRechercherVoiture.configure(highlightbackground="#d9d9d9")
        self.BtnRechercherVoiture.configure(highlightcolor="black")
        self.BtnRechercherVoiture.configure(pady="0")
        self.BtnRechercherVoiture.configure(text='''Rechercher''')
        self.Label14 = tk.Label(self.TNotebook1_t3)
        self.Label14.place(relx=0.033, rely=0.047, height=41, width=114)
        self.Label14.configure(anchor='w')
        self.Label14.configure(background="#d9d9d9")
        self.Label14.configure(compound='left')
        self.Label14.configure(disabledforeground="#a3a3a3")
        self.Label14.configure(foreground="#000000")
        self.Label14.configure(text='''Numéro plaque:''')
        self.Label15 = tk.Label(self.TNotebook1_t3)
        self.Label15.place(relx=0.033, rely=0.186, height=41, width=114)
        self.Label15.configure(anchor='w')
        self.Label15.configure(background="#d9d9d9")
        self.Label15.configure(compound='left')
        self.Label15.configure(disabledforeground="#a3a3a3")
        self.Label15.configure(foreground="#000000")
        self.Label15.configure(text='''Numéro technicien:''')
        self.EntryReparationNumPlaque = tk.Entry(self.TNotebook1_t3)
        self.EntryReparationNumPlaque.place(relx=0.25, rely=0.047, height=40, relwidth=0.34)
        self.EntryReparationNumPlaque.configure(background="white")
        self.EntryReparationNumPlaque.configure(disabledforeground="#a3a3a3")
        self.EntryReparationNumPlaque.configure(font="TkFixedFont")
        self.EntryReparationNumPlaque.configure(foreground="#000000")
        self.EntryReparationNumPlaque.configure(insertbackground="black")
        self.EntryReparationNumTechnicien = tk.Entry(self.TNotebook1_t3)
        self.EntryReparationNumTechnicien.place(relx=0.25, rely=0.186, height=40, relwidth=0.307)
        self.EntryReparationNumTechnicien.configure(background="white")
        self.EntryReparationNumTechnicien.configure(disabledforeground="#a3a3a3")
        self.EntryReparationNumTechnicien.configure(font="TkFixedFont")
        self.EntryReparationNumTechnicien.configure(foreground="#000000")
        self.EntryReparationNumTechnicien.configure(insertbackground="black")
        self.Labelframe4 = tk.LabelFrame(self.TNotebook1_t3)
        self.Labelframe4.place(relx=0.017, rely=0.326, relheight=0.453
                , relwidth=0.95)
        self.Labelframe4.configure(relief='groove')
        self.Labelframe4.configure(foreground="#000000")
        self.Labelframe4.configure(text='''infos réparation''')
        self.Labelframe4.configure(background="#ff8040")
        self.Label16 = tk.Label(self.Labelframe4)
        self.Label16.place(relx=0.018, rely=0.113, height=46, width=101
                , bordermode='ignore')
        self.Label16.configure(anchor='w')
        self.Label16.configure(background="#d9d9d9")
        self.Label16.configure(compound='left')
        self.Label16.configure(disabledforeground="#a3a3a3")
        self.Label16.configure(foreground="#000000")
        self.Label16.configure(text='''Code:''')
        self.Label17 = tk.Label(self.Labelframe4)
        self.Label17.place(relx=0.018, rely=0.4, height=46, width=104
                , bordermode='ignore')
        self.Label17.configure(anchor='w')
        self.Label17.configure(background="#d9d9d9")
        self.Label17.configure(compound='left')
        self.Label17.configure(disabledforeground="#a3a3a3")
        self.Label17.configure(foreground="#000000")
        self.Label17.configure(text='''Description:''')
        self.Label18 = tk.Label(self.Labelframe4)
        self.Label18.place(relx=0.018, rely=0.769, height=35, width=104
                , bordermode='ignore')
        self.Label18.configure(anchor='w')
        self.Label18.configure(background="#d9d9d9")
        self.Label18.configure(compound='left')
        self.Label18.configure(disabledforeground="#a3a3a3")
        self.Label18.configure(foreground="#000000")
        self.Label18.configure(text='''Date:''')
        self.EntryReparationCode = tk.Entry(self.Labelframe4)
        self.EntryReparationCode.place(relx=0.211, rely=0.113, height=40, relwidth=0.253
                                       , bordermode='ignore')
        self.EntryReparationCode.configure(background="white")
        self.EntryReparationCode.configure(disabledforeground="#a3a3a3")
        self.EntryReparationCode.configure(font="TkFixedFont")
        self.EntryReparationCode.configure(foreground="#000000")
        self.EntryReparationCode.configure(insertbackground="black")
        self.EntryReparationDescription = tk.Entry(self.Labelframe4)
        self.EntryReparationDescription.place(relx=0.211, rely=0.359, height=60, relwidth=0.709
                                              , bordermode='ignore')
        self.EntryReparationDescription.configure(background="white")
        self.EntryReparationDescription.configure(disabledforeground="#a3a3a3")
        self.EntryReparationDescription.configure(font="TkFixedFont")
        self.EntryReparationDescription.configure(foreground="#000000")
        self.EntryReparationDescription.configure(insertbackground="black")
        self.EntryReparationDate = tk.Entry(self.Labelframe4)
        self.EntryReparationDate.place(relx=0.228, rely=0.769, height=40, relwidth=0.253
                                       , bordermode='ignore')
        self.EntryReparationDate.configure(background="white")
        self.EntryReparationDate.configure(disabledforeground="#a3a3a3")
        self.EntryReparationDate.configure(font="TkFixedFont")
        self.EntryReparationDate.configure(foreground="#000000")
        self.EntryReparationDate.configure(insertbackground="black")
        self.Label19 = tk.Label(self.Labelframe4)
        self.Label19.place(relx=0.526, rely=0.769, height=31, width=64
                , bordermode='ignore')
        self.Label19.configure(anchor='w')
        self.Label19.configure(background="#d9d9d9")
        self.Label19.configure(compound='left')
        self.Label19.configure(disabledforeground="#a3a3a3")
        self.Label19.configure(foreground="#000000")
        self.Label19.configure(text='''Montant:''')
        self.EntryReparationMontant = tk.Entry(self.Labelframe4)
        self.EntryReparationMontant.place(relx=0.649, rely=0.769, height=30, relwidth=0.218
                                          , bordermode='ignore')
        self.EntryReparationMontant.configure(background="white")
        self.EntryReparationMontant.configure(disabledforeground="#a3a3a3")
        self.EntryReparationMontant.configure(font="TkFixedFont")
        self.EntryReparationMontant.configure(foreground="#000000")
        self.EntryReparationMontant.configure(insertbackground="black")
        self.BtnAjouerReparation = tk.Button(self.TNotebook1_t3)
        self.BtnAjouerReparation.place(relx=0.067, rely=0.814, height=44, width=97)
        self.BtnAjouerReparation.configure(activebackground="beige")
        self.BtnAjouerReparation.configure(activeforeground="black")
        self.BtnAjouerReparation.configure(background="#d9d9d9")
        self.BtnAjouerReparation.configure(compound='left')
        self.BtnAjouerReparation.configure(disabledforeground="#a3a3a3")
        self.BtnAjouerReparation.configure(foreground="#000000")
        self.BtnAjouerReparation.configure(highlightbackground="#d9d9d9")
        self.BtnAjouerReparation.configure(highlightcolor="black")
        self.BtnAjouerReparation.configure(pady="0")
        self.BtnAjouerReparation.configure(text='''Ajouter''')
        self.BtnSupprimerReparation = tk.Button(self.TNotebook1_t3)
        self.BtnSupprimerReparation.place(relx=0.367, rely=0.814, height=44, width=107)
        self.BtnSupprimerReparation.configure(activebackground="beige")
        self.BtnSupprimerReparation.configure(activeforeground="black")
        self.BtnSupprimerReparation.configure(background="#d9d9d9")
        self.BtnSupprimerReparation.configure(compound='left')
        self.BtnSupprimerReparation.configure(disabledforeground="#a3a3a3")
        self.BtnSupprimerReparation.configure(foreground="#000000")
        self.BtnSupprimerReparation.configure(highlightbackground="#d9d9d9")
        self.BtnSupprimerReparation.configure(highlightcolor="black")
        self.BtnSupprimerReparation.configure(pady="0")
        self.BtnSupprimerReparation.configure(text='''Supprimer''')
        self.Label20 = tk.Label(self.TNotebook1_t4)
        self.Label20.place(relx=0.033, rely=0.047, height=51, width=114)
        self.Label20.configure(anchor='w')
        self.Label20.configure(background="#d9d9d9")
        self.Label20.configure(compound='left')
        self.Label20.configure(disabledforeground="#a3a3a3")
        self.Label20.configure(foreground="#000000")
        self.Label20.configure(text='''Numéro plaque:''')
        self.Label21 = tk.Label(self.TNotebook1_t4)
        self.Label21.place(relx=0.033, rely=0.209, height=41, width=114)
        self.Label21.configure(anchor='w')
        self.Label21.configure(background="#d9d9d9")
        self.Label21.configure(compound='left')
        self.Label21.configure(disabledforeground="#a3a3a3")
        self.Label21.configure(foreground="#000000")
        self.Label21.configure(text='''Marque voiture:''')
        self.TCombobox1 = ttk.Combobox(self.TNotebook1_t4)
        self.TCombobox1.place(relx=0.283, rely=0.047, relheight=0.119
                , relwidth=0.288)
        self.TCombobox1.configure(textvariable=self.combobox)
        self.TCombobox1.configure(takefocus="")
        self.BtnAfficherReparation = tk.Button(self.TNotebook1_t4)
        self.BtnAfficherReparation.place(relx=0.65, rely=0.047, height=44, width=137)
        self.BtnAfficherReparation.configure(activebackground="beige")
        self.BtnAfficherReparation.configure(activeforeground="black")
        self.BtnAfficherReparation.configure(background="#d9d9d9")
        self.BtnAfficherReparation.configure(compound='left')
        self.BtnAfficherReparation.configure(disabledforeground="#a3a3a3")
        self.BtnAfficherReparation.configure(foreground="#000000")
        self.BtnAfficherReparation.configure(highlightbackground="#d9d9d9")
        self.BtnAfficherReparation.configure(highlightcolor="black")
        self.BtnAfficherReparation.configure(pady="0")
        self.BtnAfficherReparation.configure(text='''Afficher réparations''')
        self.EntryConsultationMarque = tk.Entry(self.TNotebook1_t4)
        self.EntryConsultationMarque.place(relx=0.267, rely=0.209, height=40, relwidth=0.24)
        self.EntryConsultationMarque.configure(background="white")
        self.EntryConsultationMarque.configure(disabledforeground="#a3a3a3")
        self.EntryConsultationMarque.configure(font="TkFixedFont")
        self.EntryConsultationMarque.configure(foreground="#000000")
        self.EntryConsultationMarque.configure(insertbackground="black")
        self.Scrolledtreeview1 = ScrolledTreeView(self.TNotebook1_t4)
        self.Scrolledtreeview1.place(relx=0.033, rely=0.349, relheight=0.456
                , relwidth=0.933)
        self.Scrolledtreeview1.configure(columns="Col1 Col2 Col3 Col4")
        # build_treeview_support starting.
        self.Scrolledtreeview1.heading("#0",text="code réparation")
        self.Scrolledtreeview1.heading("#0",anchor="center")
        self.Scrolledtreeview1.column("#0",width="113")
        self.Scrolledtreeview1.column("#0",minwidth="20")
        self.Scrolledtreeview1.column("#0",stretch="1")
        self.Scrolledtreeview1.column("#0",anchor="w")
        self.Scrolledtreeview1.heading("Col1",text="Description")
        self.Scrolledtreeview1.heading("Col1",anchor="center")
        self.Scrolledtreeview1.column("Col1",width="114")
        self.Scrolledtreeview1.column("Col1",minwidth="20")
        self.Scrolledtreeview1.column("Col1",stretch="1")
        self.Scrolledtreeview1.column("Col1",anchor="w")
        self.Scrolledtreeview1.heading("Col2",text="intervenant")
        self.Scrolledtreeview1.heading("Col2",anchor="center")
        self.Scrolledtreeview1.column("Col2",width="44")
        self.Scrolledtreeview1.column("Col2",minwidth="20")
        self.Scrolledtreeview1.column("Col2",stretch="1")
        self.Scrolledtreeview1.column("Col2",anchor="w")
        self.Scrolledtreeview1.heading("Col3",text="Date")
        self.Scrolledtreeview1.heading("Col3",anchor="center")
        self.Scrolledtreeview1.column("Col3",width="110")
        self.Scrolledtreeview1.column("Col3",minwidth="20")
        self.Scrolledtreeview1.column("Col3",stretch="1")
        self.Scrolledtreeview1.column("Col3",anchor="w")
        self.Scrolledtreeview1.heading("Col4",text="Montant")
        self.Scrolledtreeview1.heading("Col4",anchor="center")
        self.Scrolledtreeview1.column("Col4",width="160")
        self.Scrolledtreeview1.column("Col4",minwidth="20")
        self.Scrolledtreeview1.column("Col4",stretch="1")
        self.Scrolledtreeview1.column("Col4",anchor="w")



    #  coder les button----------------------------------------------------------------------------------------------


    def créergarage(self):
        garage = classes.Garage(str(self.EntryGarageNom),str(self.EntryGarageAddresse),str(self.EntryGarageTelephone),classes.listemploye,classes.listvoiture)

        self.BtnCréerGarage.bind("<Button-1>", créergarage)

        #  deserialiser
        #self.BtnDesserialiser.bind("<Button-1>", classes.deserialisergarage(cls, fichier=self.EntryFichier))
        #  serialiser
        #self.BtnSerialiser.bind("<Button-1>", classes.Garage.serialisergarage(cls, element=, fichier=self.EntryFichier))





# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''
    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))
        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')
        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)
        # Copy geometry methods of master  (taken from ScrolledText.py)
        methods = tk.Pack.__dict__.keys() | tk.Grid.__dict__.keys() \
                  | tk.Place.__dict__.keys()
        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''
        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)
        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''
    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        container.bind('<Enter>', lambda e: _bound_to_mousewheel(e, container))
        container.bind('<Leave>', lambda e: _unbound_to_mousewheel(e, container))
        return func(cls, container, **kw)
    return wrapped

class ScrolledTreeView(AutoScroll, ttk.Treeview):
    '''A standard ttk Treeview widget with scrollbars that will
    automatically show/hide as needed.'''
    @_create_container
    def __init__(self, master, **kw):
        ttk.Treeview.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

import platform
def _bound_to_mousewheel(event, widget):
    child = widget.winfo_children()[0]
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        child.bind_all('<MouseWheel>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-MouseWheel>', lambda e: _on_shiftmouse(e, child))
    else:
        child.bind_all('<Button-4>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Button-5>', lambda e: _on_mousewheel(e, child))
        child.bind_all('<Shift-Button-4>', lambda e: _on_shiftmouse(e, child))
        child.bind_all('<Shift-Button-5>', lambda e: _on_shiftmouse(e, child))

def _unbound_to_mousewheel(event, widget):
    if platform.system() == 'Windows' or platform.system() == 'Darwin':
        widget.unbind_all('<MouseWheel>')
        widget.unbind_all('<Shift-MouseWheel>')
    else:
        widget.unbind_all('<Button-4>')
        widget.unbind_all('<Button-5>')
        widget.unbind_all('<Shift-Button-4>')
        widget.unbind_all('<Shift-Button-5>')

def _on_mousewheel(event, widget):
    if platform.system() == 'Windows':
        widget.yview_scroll(-1*int(event.delta/120),'units')
    elif platform.system() == 'Darwin':
        widget.yview_scroll(-1*int(event.delta),'units')
    else:
        if event.num == 4:
            widget.yview_scroll(-1, 'units')
        elif event.num == 5:
            widget.yview_scroll(1, 'units')

def _on_shiftmouse(event, widget):
    if platform.system() == 'Windows':
        widget.xview_scroll(-1*int(event.delta/120), 'units')
    elif platform.system() == 'Darwin':
        widget.xview_scroll(-1*int(event.delta), 'units')
    else:
        if event.num == 4:
            widget.xview_scroll(-1, 'units')
        elif event.num == 5:
            widget.xview_scroll(1, 'units')
# def start_up():
#     unknown_support.main()
#
# if __name__ == '__main__':
#     unknown_support.main()

if __name__ == '__main__':
    root=tk.Tk()
    projetfinalui:ProjetFinalUI=ProjetFinalUI(root)
    root.mainloop()



